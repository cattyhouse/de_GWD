#!/bin/bash
clear
function blue()   { echo -e "\033[34m\033[01m $1 \033[0m"; }
function yellow() { echo -e "\033[33m\033[01m $1 \033[0m"; }
function green()  { echo -e "\033[32m\033[01m $1 \033[0m"; }
function red()    { echo -e "\033[31m\033[01m $1 \033[0m"; }


architecture=""
case $(uname -m) in
    x86_64)  architecture="amd64" ;;
    aarch64)  architecture="arm64" ;;
esac


function preinstall(){
cat > /etc/default/locale << EOF
LANG=en_US.UTF-8
LANGUAGE=en_US.UTF-8
LC_CTYPE="en_US.UTF-8"
LC_NUMERIC="en_US.UTF-8"
LC_TIME="en_US.UTF-8"
LC_COLLATE="en_US.UTF-8"
LC_MONETARY="en_US.UTF-8"
LC_MESSAGES="en_US.UTF-8"
LC_PAPER="en_US.UTF-8"
LC_NAME="en_US.UTF-8"
LC_ADDRESS="en_US.UTF-8"
LC_TELEPHONE="en_US.UTF-8"
LC_MEASUREMENT="en_US.UTF-8"
LC_IDENTIFICATION="en_US.UTF-8"
LC_ALL=en_US.UTF-8
EOF
locale-gen en_US.UTF-8

sed -i '/GRUB_CMDLINE_LINUX_DEFAULT=/c\GRUB_CMDLINE_LINUX_DEFAULT="quiet splash zswap.enabled=1 zswap.compressor=lz4"'  /etc/default/grub
update-grub

sed -i '/65535/d' /etc/security/limits.conf
sed -i '/# End of file/i\* soft nproc 65535' /etc/security/limits.conf
sed -i '/# End of file/i\* hard nproc 65535' /etc/security/limits.conf
sed -i '/# End of file/i\* soft nofile 65535' /etc/security/limits.conf
sed -i '/# End of file/i\* hard nofile 65535' /etc/security/limits.conf
echo "ulimit -n 65535" > ~/.bash_profile

cat > /etc/sysctl.conf << EOF
vm.overcommit_memory = 1
kernel.pid_max = 65535
fs.file-max = 1000000
fs.inotify.max_user_instances = 8192
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv4.conf.all.route_localnet = 1
net.ipv4.conf.all.accept_source_route = 1
net.ipv4.conf.default.accept_source_route = 1
net.ipv4.ip_forward = 1
net.ipv4.ip_local_port_range = 1024 65535
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_fastopen = 3
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_syn_retries = 1
net.ipv4.tcp_synack_retries = 1
net.ipv4.tcp_timestamps = 0
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_max_syn_backlog = 16384
net.ipv4.tcp_max_tw_buckets = 6000
net.ipv4.tcp_max_orphans = 32768
net.ipv4.tcp_rmem = 4096 87380 8388608
net.ipv4.tcp_wmem = 4096 87380 8388608
net.core.rmem_max = 8388608
net.core.wmem_max = 8388608
net.core.somaxconn = 32768
net.core.netdev_max_backlog = 32768
net.core.default_qdisc = fq
net.ipv4.tcp_congestion_control = bbr
EOF
sysctl -p

if [[ $architecture = "arm64" ]]; then
sed -i '/GOVERNOR=/c\GOVERNOR=performance' /etc/default/cpufrequtils
/etc/init.d/cpufrequtils restart;
fi

if [[ $architecture = "amd64" ]]; then
cat > /etc/apt/sources.list << EOF
deb http://mirrors.163.com/debian/ stretch main non-free contrib
deb http://mirrors.163.com/debian/ stretch-updates main non-free contrib
deb http://mirrors.163.com/debian/ stretch-backports main non-free contrib
deb-src http://mirrors.163.com/debian/ stretch main non-free contrib
deb-src http://mirrors.163.com/debian/ stretch-updates main non-free contrib
deb-src http://mirrors.163.com/debian/ stretch-backports main non-free contrib
deb http://mirrors.163.com/debian-security/ stretch/updates main non-free contrib
deb-src http://mirrors.163.com/debian-security/ stretch/updates main non-free contrib
EOF
fi
apt update && apt -y upgrade
apt install -y net-tools curl rsync ca-certificates unzip git build-essential ipset
}


function predownload(){
wget -O /usr/local/bin/chnroute.txt https://accspeed.cf/ui-cnr.txt
wget -O ~/ui-script.zip https://accspeed.cf/ui-script.zip
wget -O ~/ui-web.zip https://accspeed.cf/ui-web.zip
}


function installv2ray(){
mkdir -p /etc/v2ray
mkdir -p /usr/bin/v2ray
mkdir -p /var/log/v2ray
if [[ $architecture = "arm64" ]]; then
    wget -O ~/v2arm64.zip https://accspeed.cf/v2arm64.zip
    unzip v2arm64.zip
    mv -f ~/v2arm64/geoip.dat /usr/bin/v2ray/geoip.dat
    mv -f ~/v2arm64/geosite.dat /usr/bin/v2ray/geosite.dat
    mv -f ~/v2arm64/v2ray /usr/bin/v2ray/v2ray
    mv -f ~/v2arm64/v2ctl /usr/bin/v2ray/v2ctl
    mv -f ~/v2arm64/v2ray.service /etc/systemd/system/v2ray.service
    rm -rf ~/v2arm64
    rm -rf ~/v2arm64.zip
elif [[ $architecture = "amd64" ]]; then
    wget -O ~/v2amd64.zip https://accspeed.cf/v2amd64.zip
    unzip v2amd64.zip
    mv -f ~/v2amd64/geoip.dat /usr/bin/v2ray/geoip.dat
    mv -f ~/v2amd64/geosite.dat /usr/bin/v2ray/geosite.dat
    mv -f ~/v2amd64/v2ray /usr/bin/v2ray/v2ray
    mv -f ~/v2amd64/v2ctl /usr/bin/v2ray/v2ctl
    mv -f ~/v2amd64/v2ray.service /etc/systemd/system/v2ray.service
    rm -rf ~/v2amd64
    rm -rf ~/v2amd64.zip
fi
chmod +x /usr/bin/v2ray/v2ray
chmod +x /usr/bin/v2ray/v2ctl

wget -O /etc/v2ray/config.json https://raw.githubusercontent.com/gwdburst/de_GWD/master/de_GWD_Client/v2wt-client.json
}


function installiptablesproxy(){
cat > /usr/local/bin/iptables-proxy-up << "EOF"
#!/bin/bash
ipset -X chnroute
ipset -X lanip
ipset -X listwlan
ipset -X listw
ipset -X listb

lanip="0.0.0.0/8 10.0.0.0/8 100.64.0.0/10 127.0.0.0/8 169.254.0.0/16 172.16.0.0/12 192.168.0.0/16 224.0.0.0/4 240.0.0.0/4 223.5.5.5 223.6.6.6 114.114.114.114 114.114.115.115 1.2.4.8 210.2.4.8 112.124.47.27 114.215.126.16 112.124.47.27 180.76.76.76 119.29.29.29 182.254.116.116"

ipset -N chnroute hash:net maxelem 65535
for ipchnroute in $(cat /usr/local/bin/chnroute.txt); do
  ipset add chnroute $ipchnroute
done

ipset -N lanip hash:net maxelem 65535
for iplanip in $lanip; do
  ipset add lanip $iplanip
done

ipset -N listwlan hash:net maxelem 65535
for iplistwlan in $(cat /var/www/html/listwlan.txt); do
  ipset add listwlan $iplistwlan
done

ipset -N listw hash:net maxelem 65535
for iplistw in $(cat /var/www/html/listw.txt); do
  ipset add listw $iplistw
done
for ipdomain in $(cat /var/www/html/domain.txt); do
  ipset add listw $ipdomain
done

ipset -N listb hash:net maxelem 65535
for iplistb in $(cat /var/www/html/listb.txt); do
  ipset add listb $iplistb
done

ip rule add fwmark 0x9 table 100 pref 100
ip route add local 0.0.0.0/0 dev lo table 100

iptables -t mangle -N V2RAYOUT
iptables -t mangle -N V2RAYPRE
iptables -t nat    -N V2RAYOUT
iptables -t nat    -N V2RAYPRE

iptables -t mangle -A OUTPUT     -j V2RAYOUT
iptables -t mangle -A PREROUTING -j V2RAYPRE
iptables -t nat    -A OUTPUT     -j V2RAYOUT
iptables -t nat    -A PREROUTING -j V2RAYPRE

iptables -t mangle -N V2PROXY
iptables -t mangle -A V2PROXY -p tcp -dport 5380 -j ACCEPT
iptables -t mangle -A V2PROXY -p udp -dport 5380 -j ACCEPT
iptables -t mangle -A V2PROXY -m set --match-set listb dst -j MARK --set-mark 0x9
iptables -t mangle -A V2PROXY -m set --match-set lanip dst -j ACCEPT
iptables -t mangle -A V2PROXY -m set --match-set listwlan src -j ACCEPT
iptables -t mangle -A V2PROXY -m set --match-set listw dst -j ACCEPT
iptables -t mangle -A V2PROXY -m set --match-set chnroute dst -j ACCEPT
iptables -t mangle -A V2PROXY -m mark --mark 0xff -j ACCEPT
iptables -t mangle -A V2PROXY -j MARK --set-mark 0x9

iptables -t mangle -A V2RAYOUT -p tcp -j V2PROXY
iptables -t mangle -A V2RAYOUT -p udp -j V2PROXY

iptables -t mangle -A V2RAYPRE -m mark ! --mark 0x9 -j V2PROXY

iptables -t mangle -A V2RAYPRE -p tcp -j TPROXY --on-ip 127.0.0.1 --on-port 9896 --tproxy-mark 0x9
iptables -t mangle -A V2RAYPRE -p udp -j TPROXY --on-ip 127.0.0.1 --on-port 9896 --tproxy-mark 0x9
systemctl restart v2ray
EOF
chmod +x /usr/local/bin/iptables-proxy-up

cat > /usr/local/bin/iptables-proxy-down << EOF
#!/bin/bash
systemctl stop v2ray

ip route flush table 100
ip rule delete fwmark 0x9

iptables -t nat -F
iptables -t nat -X
iptables -t mangle -F
iptables -t mangle -X
iptables -F
iptables -X

ipset -F chnroute
ipset -F lanip
ipset -F listwlan
ipset -F listw
ipset -F listb
EOF
chmod +x /usr/local/bin/iptables-proxy-down

cat > /etc/systemd/system/iptables-proxy.service << EOF
[Unit]
Description=iptables-proxy
Requires=network.target network-online.target
After=network-online.target
Wants=network-online.target

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/usr/local/bin/iptables-proxy-up
ExecStop=/usr/local/bin/iptables-proxy-down

[Install]
WantedBy=multi-user.target
EOF
systemctl daemon-reload
systemctl restart iptables-proxy
systemctl enable iptables-proxy
}


function installdoh(){
source ~/.profile
rm -rf ~/dns-over-https
rm -rf /usr/local/bin/doh-client
rm -rf /usr/local/bin/doh-server
rm -rf /etc/NetworkManager/dispatcher.d
rm -rf /usr/lib/systemd/system/doh-client.service
rm -rf /usr/lib/systemd/system/doh-server.service
git clone https://github.com/m13253/dns-over-https.git
cd dns-over-https
make && make install
cd ~
rm -rf ~/dns-over-https
wget -O /etc/dns-over-https/doh-client.conf https://raw.githubusercontent.com/gwdburst/de_GWD/master/de_GWD_Client/doh-client.conf
}


function installpihole(){
rm -rf /var/www/html/admin

echo "稍稍等待。。。"

curl -sSL https://install.pi-hole.net | bash
}


function piholesetting(){
cat > /etc/pihole/adlists.list << EOF
https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
https://hosts.nfz.moe/127.0.0.1/full/hosts
EOF
pihole -g

cat > /etc/pihole/dns-servers.conf << EOF
 114DNS;114.114.114.114;114.114.115.115
 DNSpod;119.29.29.29;119.28.28.28
 阿里DNS;223.5.5.5;223.6.6.6
 DNS派;101.226.4.6;218.30.118.6
 中科大防污染DNS;202.141.162.123;202.141.176.93
 PdomoDNS;101.132.183.99;47.98.124.222
 清华TUNA_DNS;101.6.6.6
 Hi!XNS;40.73.101.101
 Dns-over-https;127.0.0.1#5380
EOF

sed -i '/PIHOLE_DNS/d'  /etc/pihole/setupVars.conf
sed -i '/IPV6_ADDRESS=/a\PIHOLE_DNS_6=127.0.0.1#5380' /etc/pihole/setupVars.conf
sed -i '/IPV6_ADDRESS=/a\PIHOLE_DNS_5=40.73.101.101' /etc/pihole/setupVars.conf
sed -i '/IPV6_ADDRESS=/a\PIHOLE_DNS_4=223.6.6.6' /etc/pihole/setupVars.conf
sed -i '/IPV6_ADDRESS=/a\PIHOLE_DNS_3=223.5.5.5' /etc/pihole/setupVars.conf
sed -i '/IPV6_ADDRESS=/a\PIHOLE_DNS_2=119.28.28.28' /etc/pihole/setupVars.conf
sed -i '/IPV6_ADDRESS=/a\PIHOLE_DNS_1=119.29.29.29' /etc/pihole/setupVars.conf
sed -i '/server=/d'  /etc/dnsmasq.d/01-pihole.conf
sed -i '/interface=/i\server=119.29.29.29' /etc/dnsmasq.d/01-pihole.conf
sed -i '/interface=/i\server=119.28.28.28' /etc/dnsmasq.d/01-pihole.conf
sed -i '/interface=/i\server=223.5.5.5' /etc/dnsmasq.d/01-pihole.conf
sed -i '/interface=/i\server=223.6.6.6' /etc/dnsmasq.d/01-pihole.conf
sed -i '/interface=/i\server=40.73.101.101' /etc/dnsmasq.d/01-pihole.conf
sed -i '/interface=/i\server=127.0.0.1#5380' /etc/dnsmasq.d/01-pihole.conf

sed -i '/nameserver/c\nameserver 127.0.0.1'  /etc/resolv.conf
}


function postinstall(){
cat > /usr/local/bin/updateGWD << "EOF"
#!/bin/bash
curl 'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest' | grep ipv4 | grep CN | awk -F\| '{ printf("%s/%d\n", $4, 32-log($5)/log(2)) }' > /usr/local/bin/chnroute.txt

ipset -F chnroute
for ipchnroute in $(cat /usr/local/bin/chnroute.txt); do
  ipset add chnroute $ipchnroute
done
EOF
chmod +x /usr/local/bin/updateGWD
/usr/local/bin/updateGWD

cat > /usr/local/bin/clearcache << "EOF"
#!/bin/bash
date -s "$(wget -qSO- --max-redirect=0 google.com 2>&1 | grep Date: | cut -d' ' -f5-8)Z"
hwclock -w

rm -rf /var/log/*1
rm -rf /var/log/*2
rm -rf /var/log/*gz
rm -rf ~/client
rm -rf /var/www/html/log.log
EOF
chmod +x /usr/local/bin/clearcache

crontab -l > now.cron
if [[ "$(crontab -l | grep 'updateGWD' | awk '{print $6}')" != "/usr/local/bin/updateGWD" ]]; then
  echo '0 4 * * * /usr/local/bin/updateGWD' >> now.cron
fi
if [[ "$(crontab -l | grep 'clearcache' | awk '{print $6}')" != "/usr/local/bin/clearcache" ]]; then
  echo '0 */4 * * * /usr/local/bin/clearcache' >> now.cron
fi
crontab now.cron
rm -rf now.cron

rm -rf /usr/local/bin/ui-*
unzip ui-script.zip
unzip ui-web.zip
rsync -r ~/ui-script/* /usr/local/bin
chmod +x /usr/local/bin/*
rsync -r ~/ui-web/* /var/www/html

rm -rf ~/ui-*
wget -O /var/www/html/version.php https://raw.githubusercontent.com/gwdburst/de_GWD/master/de_GWD_Client/version.php
}



installgwd(){
    green "==============="
    green "本机地址"
    green "==============="
    read localaddr

    green "==============="
    green "上级路由地址"
    green "==============="
    read gatewayaddr

    green "==============="
    green "v2ray节点域名"
    green "==============="
    read v2servn

    green "==============="
    green "输入v2ray uuid"
    green "==============="
    read uuidnum

    green "==============="
    green "输入path"
    green "==============="
    read v2path

cd ~
systemctl stop iptables-proxy

preinstall

predownload

installv2ray
sed -i '/"address":/c\"address": "'$v2servn'",'  /etc/v2ray/config.json
sed -i '/"id":/c\"id": "'$uuidnum'",'  /etc/v2ray/config.json
sed -i '/"serverName":/c\"serverName": "'$v2servn'",'  /etc/v2ray/config.json
sed -i '/"path":/c\"path": "'$v2path'",'  /etc/v2ray/config.json
sed -i '/"Host":/c\"Host": "'$v2servn'"'  /etc/v2ray/config.json
systemctl restart v2ray
systemctl enable v2ray

installiptablesproxy

if [[ $architecture = "arm64" ]]; then
    wget -N https://dl.google.com/go/go1.11.9.linux-arm64.tar.gz
    tar -xvf go*linux-arm64.tar.gz
    rm -rf ~/go*linux-arm64.tar.gz
elif [[ $architecture = "amd64" ]]; then
    wget -N https://dl.google.com/go/go1.11.9.linux-amd64.tar.gz
    tar -xvf go*linux-amd64.tar.gz
    rm -rf ~/go*linux-amd64.tar.gz
fi
rsync -r ~/go /usr/local
mkdir -p ~/gopath
cat > ~/.profile << "EOF"
if [ "$BASH" ]; then
  if [ -f ~/.bashrc ]; then
    . ~/.bashrc
  fi
fi

mesg n || true

export GOROOT=/usr/local/go
export GOPATH=~/gopath
export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
EOF
rm -rf ~/go

installdoh
doh_upstream='url = "https:\/\/'$v2servn'\/dq"'
sed -i "$(sed -n -e '/url =/=' /etc/dns-over-https/doh-client.conf | awk 'NR==1{print}')s/.*/$doh_upstream/" /etc/dns-over-https/doh-client.conf
sed -i "$(sed -n -e '/url =/=' /etc/dns-over-https/doh-client.conf | awk 'NR==2{print}')s/.*/$doh_upstream/" /etc/dns-over-https/doh-client.conf
systemctl disable systemd-resolved
systemctl mask systemd-resolved
systemctl daemon-reload
systemctl restart doh-client
systemctl enable doh-client

installpihole

piholesetting

sed -i "/IPV4_ADDRESS=/c\IPV4_ADDRESS=$localaddr/24"  /etc/pihole/setupVars.conf
sed -i "/static ip_address=/c\static ip_address=$localaddr/24" /etc/dhcpcd.conf
sed -i "/static routers=/c\static routers=$gatewayaddr" /etc/dhcpcd.conf
sed -i "/static domain_name_servers=/c\static domain_name_servers=127.0.0.1" /etc/dhcpcd.conf
ethernetnum=$(ip --oneline link show up | grep -v "lo" | awk '{print $2}' | cut -d':' -f1 | cut -d'@' -f1 | awk 'NR==1{print}')
route del default
route add default gw $gatewayaddr $ethernetnum
cat > /etc/network/interfaces << EOF
source /etc/network/interfaces.d/*

auto lo
iface lo inet loopback

auto $ethernetnum
iface $ethernetnum inet static
  address $localaddr
  netmask 255.255.255.0
  gateway $gatewayaddr
EOF
pihole restartdns
systemctl restart pihole-FTL

postinstall

sed -i "/Allow members of group sudo to execute any command/a\www-data ALL=(root)  NOPASSWD:ALL" /etc/sudoers

echo -e "$v2servn" > /var/www/html/nodename.txt
echo -e "$v2servn" > /var/www/html/domain.txt
echo -e "$uuidnum" > /var/www/html/uuid.txt
echo -e "$v2path" > /var/www/html/path.txt
chown -R www-data:www-data /var/www/html/*.txt

blue "-----------------"
blue  "安装de_GWD [完毕]"
blue "-----------------"
}


change_piholeadmin(){
pihole -a -p
blue "----------------------"
blue  "更改Pi-hole密码 [完毕]"
blue "----------------------"
}



updatepihole(){
installpihole

piholesetting

pihole restartdns
systemctl restart pihole-FTL

blue "-------------------"
blue  "更新Pi-hole [完毕]"
blue "-------------------"
}


updategwd(){
cd ~
systemctl stop iptables-proxy

preinstall

predownload

installv2ray
sed -i '/"address":/c\"address": "'$(awk 'NR==1{print}' /var/www/html/domain.txt)'",'  /etc/v2ray/config.json
sed -i '/"id":/c\"id": "'$(awk 'NR==1{print}' /var/www/html/uuid.txt)'",'  /etc/v2ray/config.json
sed -i '/"serverName":/c\"serverName": "'$(awk 'NR==1{print}' /var/www/html/domain.txt)'",'  /etc/v2ray/config.json
sed -i '/"path":/c\"path": "'$(awk 'NR==1{print}' /var/www/html/path.txt)'",'  /etc/v2ray/config.json
sed -i '/"Host":/c\"Host": "'$(awk 'NR==1{print}' /var/www/html/domain.txt)'"'  /etc/v2ray/config.json
systemctl daemon-reload
systemctl restart v2ray
systemctl enable v2ray

installiptablesproxy

installdoh
doh_upstream='url = "https:\/\/'$(awk 'NR==1{print}' /var/www/html/domain.txt)'\/dq"'
sed -i "$(sed -n -e '/url =/=' /etc/dns-over-https/doh-client.conf | awk 'NR==1{print}')s/.*/$doh_upstream/" /etc/dns-over-https/doh-client.conf
sed -i "$(sed -n -e '/url =/=' /etc/dns-over-https/doh-client.conf | awk 'NR==2{print}')s/.*/$doh_upstream/" /etc/dns-over-https/doh-client.conf
systemctl daemon-reload
systemctl restart doh-client
systemctl enable doh-client

piholesetting
pihole restartdns
systemctl restart pihole-FTL

postinstall

blue "------------------"
blue  "更新de_GWD [完毕]"
blue "------------------"
}


start_menu(){
statusgod=$(green "✔︎")
statusbad=$(red "✘")

if [[ $(systemctl is-active v2ray) = "active" ]]; then
    echo "[$statusgod] v2ray     进程正常"
elif [[ ! -d "/usr/bin/v2ray" ]]; then
    echo "[$statusbad] v2ray     进程未安装"
else
    echo "[$statusbad] v2ray     进程出错"
fi


if [[ $(systemctl is-active iptables-proxy) = "active" ]]; then
    echo "[$statusgod] 代理规则  进程正常"
elif [[ ! -f "/etc/systemd/system/iptables-proxy.service" ]]; then
    echo "[$statusbad] 代理规则  进程未安装"
else
    echo "[$statusbad] 代理规则  进程出错"
fi


if [[ $(systemctl is-active doh-client) = "active" ]]; then
    echo "[$statusgod] DoH客户端 进程正常"
elif [[ ! -d "/usr/local/bin/doh-client" ]]; then
    echo "[$statusbad] DoH客户端 进程未安装"
else
    echo "[$statusbad] DoH客户端 进程出错"
fi


if [[ $(systemctl is-active pihole-FTL) = "active" ]]; then
    echo "[$statusgod] pihole    进程正常"
elif [ ! -d "/usr/local/bin/pihole" ]; then
    echo "[$statusbad] pihole    进程未安装"
else
    echo "[$statusbad] pihole    进程出错"
fi

    green "===================================="
    green "              客户端                 "
    green "介绍：一键安装de_GWD                  "
    green "系统：仅测于Debian9 (amd64 & arm64)   "
    green "作者：GWDburst                       "
    green "网站：GWDburst.github.io             "
    green "===================================="
    echo
    green  "1. 安装de_GWD"
    green  "2. 更改Pi-hole密码"
    yellow "9. 更新Pi-hole"
    yellow "0. 更新de_GWD"
    red    "CTRL+C退出"
    echo
    read -p "请输入数字:" num
    case "$num" in
    1)
    installgwd
    start_menu
    ;;
    2)
    change_piholeadmin
    start_menu
    ;;
    9)
    updatepihole
    start_menu
    ;;
    0)
    updategwd
    start_menu
    ;;
    *)
    clear
    red "请输入正确数字"
    sleep 1s
    start_menu
    ;;
    esac
}

start_menu
